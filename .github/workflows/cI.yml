name: Django CI
#액션 정의
on:
  push:
#할 일 정의
jobs:
  ci:
    runs-on: ubuntu-20.04
    env:
    #db정보
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: 1234
      DB_DATABASE: oz_django
    steps:
      - name: Check out the codes
        uses: actions/checkout@v2

      - name: Setup python environment
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Set timezone to KST
        run: |
          sudo rm /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

      # Start Mysql
      # https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
      - name: Start Mysql
        run: |
          sudo systemctl start mysql
          mysql -e "use mysql; FLUSH PRIVILEGES; ALTER USER '${{ env.DB_USER }}'@'localhost' IDENTIFIED BY '${{ env.DB_PASSWORD }}';" -uroot -proot
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Install Poetry
        run: |
          curl -sSL curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install
#black을 제대로 했는지 체크해줌, 어떤 파일을 수정해야 하는지 알려줌.
      - name: Run black
        run: |
          poetry run black . --check
#isort 체크
      - name: Run isort
        run: |
          poetry run isort . --check --diff
#mypy 검사
      - name: Run Mypy
        run: |
          poetry run mypy .
#모든 단일 테스트 수행
      - name: Test python project
        run: |
          poetry run python manage.py test
